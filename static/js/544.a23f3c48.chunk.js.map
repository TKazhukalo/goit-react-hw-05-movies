{"version":3,"file":"static/js/544.a23f3c48.chunk.js","mappings":"ySAGMA,E,QAAUC,EAAAA,OAAa,CAC3BC,QAHe,gCAIfC,OAAQ,CAAEC,QAHI,sCAMHC,EAAW,mCAAG,sGACFL,EAAQM,IAAI,sBADV,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAIXC,EAAU,mCAAG,WAAOC,GAAP,yFACDV,EAAQM,IAAR,gBAAqBI,IADpB,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVI,EAAU,mCAAG,WAAMD,GAAN,yFACDV,EAAQM,IAAR,gBAAqBI,EAArB,aADC,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,EAAKK,MAFY,2CAAH,sDAIVC,EAAU,mCAAG,WAAOH,GAAP,yFACDV,EAAQM,IAAR,gBAAqBI,EAArB,aADC,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,sDAIVM,EAAW,mCAAG,WAAOC,GAAP,yFACFf,EAAQM,IAAR,eAA4B,CACjDH,OAAQ,CACNY,MAAAA,KAHqB,uBACjBR,EADiB,EACjBA,KADiB,kBAMlBA,EAAKC,SANa,2CAAH,qD,wFCvBXQ,E,QAAkBC,EAAAA,IAAH,qE,SCU5B,EATgB,WACb,OACD,UAACD,EAAD,WAAiB,KAAC,SAAC,KAAD,CAClBE,MAAM,MACNC,MAAM,cAGP,C,sGCRYC,EAAWH,EAAAA,GAAAA,GAAD,kDAGVI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,gI,SCFPM,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,OAClBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACKF,EAAOG,KAAI,YAAoB,IAAjBjB,EAAgB,EAAhBA,GAAIkB,EAAY,EAAZA,MACf,OACI,SAACR,EAAD,WACI,SAACC,EAAD,CAAUQ,MAAO,CAACC,KAAKL,GAAWM,GAAE,kBAAarB,GAAjD,SAAwDkB,KAD3ClB,EAIxB,KAGZ,C,0HCgBD,UA1BY,WACV,OAA4BsB,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAgBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEKhC,EAAAA,EAAAA,MAFL,OAEVmB,EAFU,OAGhBS,EAAUT,GACVW,GAAW,GAJK,gDAMhBG,QAAQC,IAAR,MANgB,yBAQdJ,GAAW,GARG,4EAAH,qDAWjBE,GACD,GAAE,KAGD,4BACE,wBAAI,mBACe,IAAlBb,EAAOgB,SAAgB,SAAC,IAAD,CAAYhB,OAAQA,IAC9CU,IAAW,SAAC,IAAD,MAGd,C","sources":["api/apiMovies.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from \"axios\";\nconst baseURL  = 'https://api.themoviedb.org/3/';\nconst api_key = '2161664d4314fc48afed48c009adafff';\nconst linkLib = axios.create({\n  baseURL ,\n  params: { api_key },\n});\n\nexport const getTrending = async () => {\n  const { data } = await linkLib.get('trending/movie/day');\n  return data.results;\n};\nexport const getDetails = async (id) => {\n  const { data } = await linkLib.get(`movie/${id}`);\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await linkLib.get(`movie/${id}/credits`);\n  return data.cast;\n}\nexport const getReviews = async (id) => {\n  const { data } = await linkLib.get(`movie/${id}/reviews`);\n  return data.results;\n}\nexport const searchMovie = async (query) => {\n  const { data } = await linkLib.get(`search/movie`, {\n    params: {\n      query,\n    }\n  });\n  return data.results;\n}","import styled from '@emotion/styled';\n\nexport const LoaderAnimation = styled.div`\n  display: flex;\n  justify-content: start;\n`","import React from \"react\";\nimport { InfinitySpin } from  'react-loader-spinner'\nimport {  LoaderAnimation } from \"./Loader.styled\";\n const Loader = () => {\n   return ( \n  <LoaderAnimation> <InfinitySpin \n  width='100'\n  color=\"#370574\" />\n       </LoaderAnimation>  \n    )\n}\n\nexport default Loader;","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nexport const MoviesItem=styled.li`\n  list-style-type:none; \n`\nexport const LinkItem = styled(Link)`\n  text-decoration: none;\n  font-size: 20px;\n  color: #020202;\n  &:hover {\n    color: #276f03;\n  }\n`;","import {  useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { LinkItem, MoviesItem } from \"./MoviesList.styled\";\nexport const  MoviesList=({ movies })=> {\n    const location = useLocation();\n    return (\n        <ul>\n            {movies.map(({ id, title }) => {\n                return (\n                    <MoviesItem key={id}>\n                        <LinkItem state={{from:location}} to={`/movies/${id}`}>{title}</LinkItem>\n                    </MoviesItem>\n                )\n            })}\n        </ul>\n    )\n}\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n};","import { getTrending } from \"api/apiMovies\";\nimport {MoviesList}  from \"../../components/MoviesList/MoviesList\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Loader from \"components/Loader/Loader\";\n\n const Home=()=> {\n  const [movies, setMovies] = useState([]);\n  const [loading, setloading] = useState(false);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const movies = await getTrending();\n        setMovies(movies);\n        setloading(true);\n      } catch (error) {\n        console.log(error);\n      } finally {\n          setloading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n      {movies.length !== 0 && <MoviesList movies={movies} />}\n   {loading && <Loader />}\n    </div>\n  );\n}\nexport default Home;"],"names":["linkLib","axios","baseURL","params","api_key","getTrending","get","data","results","getDetails","id","getCredits","cast","getReviews","searchMovie","query","LoaderAnimation","styled","width","color","MoviesItem","LinkItem","Link","MoviesList","movies","location","useLocation","map","title","state","from","to","useState","setMovies","loading","setloading","useEffect","fetchMovies","console","log","length"],"sourceRoot":""}