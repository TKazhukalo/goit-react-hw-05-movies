{"version":3,"file":"static/js/691.c5d8a256.chunk.js","mappings":"wMAEaA,E,QAAkBC,EAAAA,IAAH,qE,SCU5B,EATgB,WACb,OACD,UAACD,EAAD,WAAiB,KAAC,SAAC,KAAD,CAClBE,MAAM,MACNC,MAAM,cAGP,C,sGCRYC,EAAWH,EAAAA,GAAAA,GAAD,kDAGVI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,gI,SCFPM,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,OAClBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACKF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACf,OACI,SAACT,EAAD,WACI,SAACC,EAAD,CAAUS,MAAO,CAACC,KAAKN,GAAWO,GAAE,kBAAaJ,GAAjD,SAAwDC,KAD3CD,EAIxB,KAGZ,C,yLCbKK,E,QAAUC,EAAAA,OAAa,CAC3BC,QAHe,gCAIfC,OAAQ,CAAEC,QAHI,sCAMHC,EAAW,mCAAG,sGACFL,EAAQM,IAAI,sBADV,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAIXC,EAAU,mCAAG,WAAOd,GAAP,yFACDK,EAAQM,IAAR,gBAAqBX,IADpB,uBAChBY,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVG,EAAU,mCAAG,WAAMf,GAAN,yFACDK,EAAQM,IAAR,gBAAqBX,EAArB,aADC,uBAChBY,EADgB,EAChBA,KADgB,kBAEjBA,EAAKI,MAFY,2CAAH,sDAIVC,EAAU,mCAAG,WAAOjB,GAAP,yFACDK,EAAQM,IAAR,gBAAqBX,EAArB,aADC,uBAChBY,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,sDAIVK,EAAW,mCAAG,WAAOC,GAAP,yFACFd,EAAQM,IAAR,eAA4B,CACjDH,OAAQ,CACNW,MAAAA,KAHqB,uBACjBP,EADiB,EACjBA,KADiB,kBAMlBA,EAAKC,SANa,2CAAH,qD,wLCxBXO,EAAY/B,EAAAA,GAAAA,MAAD,4FAMXgC,EAAahC,EAAAA,GAAAA,OAAD,iU,SC8CzB,EA7CmB,WACf,OAAwCiC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO7B,EAAP,KAAe8B,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACMT,EAAQI,EAAaZ,IAAI,UAE/BkB,EAAAA,EAAAA,YAAU,WACN,GAAKV,EAAL,CACA,IAAMW,EAAW,mCAAG,oGAEZF,GAAW,GAFC,UAGKV,EAAAA,EAAAA,IAAYC,GAHjB,UAIM,KADhBvB,EAHU,QAILmC,OAJK,kKAOpBL,EAAU9B,GAPU,kDASpBoC,QAAQC,IAAR,MAToB,yBAWfL,GAAW,GAXI,6EAAH,qDAcrBE,GAfsB,CAgBrB,GAAE,CAACX,IAON,OAEI,4BACD,wBAAI,wBACC,kBAAMe,SAVS,SAAAC,GACjBA,EAAEC,iBACF,IAAQC,EAAUF,EAAEG,OAAOC,SAASpB,MAA5BkB,MACRb,EAAgB,CAAEL,MAAOkB,EAAMG,SAC/BL,EAAEG,OAAOG,OACZ,EAKK,WACI,SAACrB,EAAD,CAAasB,KAAK,OACdC,KAAK,WACT,SAACtB,EAAD,UAAc,cAEjBM,IAAW,SAACiB,EAAA,EAAD,IACXhD,EAAOmC,OAAO,IAAI,SAACpC,EAAA,EAAD,CAAYC,OAAQA,MAIhD,C","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/api/apiMovies.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderAnimation = styled.div`\n  display: flex;\n  justify-content: start;\n`","import React from \"react\";\nimport { InfinitySpin } from  'react-loader-spinner'\nimport {  LoaderAnimation } from \"./Loader.styled\";\n const Loader = () => {\n   return ( \n  <LoaderAnimation> <InfinitySpin \n  width='100'\n  color=\"#370574\" />\n       </LoaderAnimation>  \n    )\n}\n\nexport default Loader;","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nexport const MoviesItem=styled.li`\n  list-style-type:none; \n`\nexport const LinkItem = styled(Link)`\n  text-decoration: none;\n  font-size: 20px;\n  color: #020202;\n  &:hover {\n    color: #276f03;\n  }\n`;","import {  useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { LinkItem, MoviesItem } from \"./MoviesList.styled\";\nexport const  MoviesList=({ movies })=> {\n    const location = useLocation();\n    return (\n        <ul>\n            {movies.map(({ id, title }) => {\n                return (\n                    <MoviesItem key={id}>\n                        <LinkItem state={{from:location}} to={`/movies/${id}`}>{title}</LinkItem>\n                    </MoviesItem>\n                )\n            })}\n        </ul>\n    )\n}\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n};","import axios from \"axios\";\nconst baseURL  = 'https://api.themoviedb.org/3/';\nconst api_key = '2161664d4314fc48afed48c009adafff';\nconst linkLib = axios.create({\n  baseURL ,\n  params: { api_key },\n});\n\nexport const getTrending = async () => {\n  const { data } = await linkLib.get('trending/movie/day');\n  return data.results;\n};\nexport const getDetails = async (id) => {\n  const { data } = await linkLib.get(`movie/${id}`);\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await linkLib.get(`movie/${id}/credits`);\n  return data.cast;\n}\nexport const getReviews = async (id) => {\n  const { data } = await linkLib.get(`movie/${id}/reviews`);\n  return data.results;\n}\nexport const searchMovie = async (query) => {\n  const { data } = await linkLib.get(`search/movie`, {\n    params: {\n      query,\n    }\n  });\n  return data.results;\n}","import styled from \"styled-components\";\nexport const SearchQuery=styled.input`\n    width: 300px;\n    height: 40px;\n    border-radius:2px;\n    \n`\nexport const ButtonSearch=styled.button`\n    border: none;\n    border-radius:2px;\n    width:100px;\n    height:43px;\n    font-size:14px;\n    cursor: pointer;\n    color: black;\n    background-color: #28d03e;\n     &:hover\n    {\n   \n        background-color: #2fe247;\n        box-shadow: 0 0 0 1px #76f752, 0 0 10px #333;\n    }\n`","import Loader from \"components/Loader/Loader\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { searchMovie } from \"components/api/apiMovies\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { ButtonSearch, SearchQuery } from \"./Movies.styled\";\n\n\n    const Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const query = searchParams.get('query');\n\n    useEffect(() => {\n        if (!query) return;\n        const fetchMovies = async () => {\n            try {\n                setLoading(true);\n            const movies = await searchMovie(query);\n            if (movies.length === 0) {\n                return `Введіть назву фільма`;\n            }\n        setMovies(movies);\n        } catch (error) {\n        console.log(error);\n        } finally {\n             setLoading(false);\n      }\n    };\n    fetchMovies();\n    }, [query]);\n    const handleSubmit = e => {\n        e.preventDefault();\n        const { value } = e.target.elements.query;\n        setSearchParams({ query: value.trim() });\n        e.target.reset();\n    }\n  return (\n  \n      <div>\n     <h2>Find movie by name</h2>\n          <form onSubmit={handleSubmit}>\n              <SearchQuery type=\"text\"\n                  name='query' />\n              <ButtonSearch>Search</ButtonSearch>\n          </form>\n          {loading && <Loader />}\n         { movies.length>0 &&<MoviesList movies={movies} />}\n        </div>\n\n  );\n};\nexport default Movies;"],"names":["LoaderAnimation","styled","width","color","MoviesItem","LinkItem","Link","MoviesList","movies","location","useLocation","map","id","title","state","from","to","linkLib","axios","baseURL","params","api_key","getTrending","get","data","results","getDetails","getCredits","cast","getReviews","searchMovie","query","SearchQuery","ButtonSearch","useSearchParams","searchParams","setSearchParams","useState","setMovies","loading","setLoading","useEffect","fetchMovies","length","console","log","onSubmit","e","preventDefault","value","target","elements","trim","reset","type","name","Loader"],"sourceRoot":""}