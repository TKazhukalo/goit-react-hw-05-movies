{"version":3,"file":"static/js/387.f96516f5.chunk.js","mappings":"ySAGMA,E,QAAUC,EAAAA,OAAa,CAC3BC,QAHe,gCAIfC,OAAQ,CAAEC,QAHI,sCAMHC,EAAW,mCAAG,sGACFL,EAAQM,IAAI,sBADV,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAIXC,EAAU,mCAAG,WAAOC,GAAP,yFACDV,EAAQM,IAAR,gBAAqBI,IADpB,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVI,EAAU,mCAAG,WAAMD,GAAN,yFACDV,EAAQM,IAAR,gBAAqBI,EAArB,aADC,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,EAAKK,MAFY,2CAAH,sDAIVC,EAAU,mCAAG,WAAOH,GAAP,yFACDV,EAAQM,IAAR,gBAAqBI,EAArB,aADC,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,sDAIVM,EAAW,mCAAG,WAAOC,GAAP,yFACFf,EAAQM,IAAR,eAA4B,CACjDH,OAAQ,CACNY,MAAAA,KAHqB,uBACjBR,EADiB,EACjBA,KADiB,kBAMlBA,EAAKC,SANa,2CAAH,qD,wFCvBXQ,E,QAAkBC,EAAAA,IAAH,qE,SCU5B,EATgB,WACb,OACD,UAACD,EAAD,WAAiB,KAAC,SAAC,KAAD,CAClBE,MAAM,MACNC,MAAM,cAGP,C,8KCRYC,EAAcH,EAAAA,GAAAA,GAAH,8LAQXI,EAAYJ,EAAAA,GAAAA,EAAD,iD,SCoCxB,EAxCoB,WAChB,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAW,mCAAG,2FAChBF,GAAW,GADK,mBAGiBf,EAAAA,EAAAA,IAAWS,GAH5B,OAGNS,EAHM,OAIZL,EAAWK,GAJC,gDAMZC,QAAQC,IAAR,MANY,yBAQVL,GAAW,GARD,4EAAH,qDAWjBE,GACH,GAAE,CAACR,KAIA,UAACF,EAAD,WACGO,IAAW,SAACO,EAAA,EAAD,IACU,IAAnBT,EAAQU,QACL,uBAAG,6CAECV,EAAQW,KAAI,YAA8B,IAA3B1B,EAA0B,EAA1BA,GAAI2B,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACvB,OACI,2BACI,0BAAI,YAAUD,MACd,SAAChB,EAAD,UAAciB,MAFT5B,EAKnB,MAKjB,C","sources":["api/apiMovies.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\nconst baseURL  = 'https://api.themoviedb.org/3/';\nconst api_key = '2161664d4314fc48afed48c009adafff';\nconst linkLib = axios.create({\n  baseURL ,\n  params: { api_key },\n});\n\nexport const getTrending = async () => {\n  const { data } = await linkLib.get('trending/movie/day');\n  return data.results;\n};\nexport const getDetails = async (id) => {\n  const { data } = await linkLib.get(`movie/${id}`);\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await linkLib.get(`movie/${id}/credits`);\n  return data.cast;\n}\nexport const getReviews = async (id) => {\n  const { data } = await linkLib.get(`movie/${id}/reviews`);\n  return data.results;\n}\nexport const searchMovie = async (query) => {\n  const { data } = await linkLib.get(`search/movie`, {\n    params: {\n      query,\n    }\n  });\n  return data.results;\n}","import styled from '@emotion/styled';\n\nexport const LoaderAnimation = styled.div`\n  display: flex;\n  justify-content: start;\n`","import React from \"react\";\nimport { InfinitySpin } from  'react-loader-spinner'\nimport {  LoaderAnimation } from \"./Loader.styled\";\n const Loader = () => {\n   return ( \n  <LoaderAnimation> <InfinitySpin \n  width='100'\n  color=\"#370574\" />\n       </LoaderAnimation>  \n    )\n}\n\nexport default Loader;","import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\nlist-style-type:none; \nlist-style:none;\n//box-shadow: inset 0 0 10px 3px rgba(0, 0, 0, 0.3);\npadding: 40px;\nfont-family: 'Comfortaa', cursive;\nfont-size: 16px;\n`\nexport const ReviewsText=styled.p`\n    text-align:justify;\n`","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { getReviews } from \"../../api/apiMovies\";\nimport Loader from \"../Loader/Loader\";\nimport { ReviewsList, ReviewsText } from \"./Reviews.styled\";\n\n    const Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n\n        const fetchMovies = async () => {\n            setLoading(true);\n            try {\n                const fetchedReviews = await getReviews(movieId);\n                setReviews(fetchedReviews);\n            } catch (error) {\n                console.log(error);\n            } finally {\n                  setLoading(false);\n            }\n        }\n        fetchMovies();\n    }, [movieId]);\n \n    return (\n\n        <ReviewsList>\n          {loading && <Loader />}\n            {reviews.length === 0 ? (\n                <p>We don't have any reviews for this movie</p>               \n            ) : (\n                    reviews.map(({ id, author, content }) => {\n                        return (\n                            <li key={id}>\n                                <h3>Author : {author}</h3>\n                                <ReviewsText>{content}</ReviewsText>\n                         </li>\n                     )\n                 })   \n)}\n            </ReviewsList>\n           \n    )\n}\nexport default Reviews;"],"names":["linkLib","axios","baseURL","params","api_key","getTrending","get","data","results","getDetails","id","getCredits","cast","getReviews","searchMovie","query","LoaderAnimation","styled","width","color","ReviewsList","ReviewsText","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","fetchMovies","fetchedReviews","console","log","Loader","length","map","author","content"],"sourceRoot":""}