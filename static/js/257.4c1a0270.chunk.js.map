{"version":3,"file":"static/js/257.4c1a0270.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/api/apiMovies.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderAnimation = styled.div`\n  display: flex;\n  justify-content: start;\n`","import React from \"react\";\nimport { InfinitySpin } from  'react-loader-spinner'\nimport {  LoaderAnimation } from \"./Loader.styled\";\n const Loader = () => {\n   return ( \n  <LoaderAnimation> <InfinitySpin \n  width='100'\n  color=\"#370574\" />\n       </LoaderAnimation>  \n    )\n}\n\nexport default Loader;","import axios from \"axios\";\nconst baseURL  = 'https://api.themoviedb.org/3/';\nconst api_key = '2161664d4314fc48afed48c009adafff';\nconst linkLib = axios.create({\n  baseURL ,\n  params: { api_key },\n});\n\nexport const getTrending = async () => {\n  const { data } = await linkLib.get('trending/movie/day');\n  return data.results;\n};\nexport const getDetails = async (id) => {\n  const { data } = await linkLib.get(`movie/${id}`);\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await linkLib.get(`movie/${id}/credits`);\n  return data.cast;\n}\nexport const getReviews = async (id) => {\n  const { data } = await linkLib.get(`movie/${id}/reviews`);\n  return data.results;\n}\nexport const searchMovie = async (query) => {\n  const { data } = await linkLib.get(`search/movie`, {\n    params: {\n      query,\n    }\n  });\n  return data.results;\n}","import styled from \"styled-components\";\n\nexport const ContainerDetails = styled.div`\n    border-bottom: 1px solid #0ad066;\n    \n`;\nexport const Button=styled.button` \n    width: 100px;\n    height: 40px;\n    border: none;\n    margin-top:20px;\n    margin-bottom: 20px;\n    border-radius:8px;\n    font-size:16px;\n    cursor: pointer;\n    color: black;\n    background-color: #28d03e;\n        &:hover\n         {\n   \n            background-color: #2fe247;\n            box-shadow: 0 0 0 1px #76f752, 0 0 10px #333;\n        }\n`","import { getDetails } from \"components/api/apiMovies\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport {  Button, ContainerDetails } from \"./MovieDetails.styled\";\nimport Loader from \"components/Loader/Loader\";\n\n    const MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const {movieId} = useParams();\n    const location = useLocation();\n    useEffect(() => {\n        const fetchMovies = async () => {\n            setLoading(true);\n            try {\n                const movie = await getDetails(movieId);\n                setMovie(movie); \n            } catch (error) {\n                console.log(error);\n                setMovie([]);\n                const errorMessage = \"Фільм не знайдено\";\n                return <p>{errorMessage }</p>\n            } finally {\n                setLoading(false);\n            }\n        }\n \n    fetchMovies();\n  }, [movieId]);\n    if (!movie) {\n        return;\n    }\n   const { \n        genres,\n        title, \n        release_date,\n        poster_path, \n        overview, \n        vote_average, \n        } = movie;\n\nconst genresList = genres?.map(genre => genre.name).join(', ');\n    return (\n          <main>\n            <div>\n                <Link to={location.state?.from ??'/'}>\n                    <Button type=\"button\">\n                &larr; Go back \n                    </Button>\n                </Link> \n                 {loading && <Loader />}\n                  <div>\n        <img width=\"250\" src={poster_path?`https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`} alt={title} />\n        <ContainerDetails>\n          <h2>{title} ({release_date.slice(0, 4)})</h2>\n          <p>User Score: {(vote_average * 10).toFixed()} %</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>\n            <span>{genresList}</span>\n          </p>\n        </ContainerDetails>\n      </div>\n      <h3>Additional information</h3>\n                <ul>\n                    <li>\n                        <Link to='cast'>Cast</Link>\n                    </li>\n                    <li>\n                        <Link to='reviews'>Reviews</Link>\n                    </li>\n                </ul>             \n            </div>\n            <Suspense fallback={<div>...Loading</div>}>\n                <Outlet />   \n            </Suspense>   \n    </main>\n    )\n}\nexport default MovieDetails;"],"names":["LoaderAnimation","styled","width","color","linkLib","axios","baseURL","params","api_key","getTrending","get","data","results","getDetails","id","getCredits","cast","getReviews","searchMovie","query","ContainerDetails","Button","useState","movie","setMovie","loading","setLoading","movieId","useParams","location","useLocation","useEffect","fetchMovies","console","log","genres","title","release_date","poster_path","overview","vote_average","genresList","map","genre","name","join","to","state","from","type","Loader","src","alt","slice","toFixed","Suspense","fallback"],"sourceRoot":""}